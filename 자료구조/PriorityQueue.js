/*
- 우선순위에 따라서 데이터를 추출하는 자료구조
- 일반적으로 힙을 이용해 구현한다.
- 일반 적으로 이진트리 구조를 사용하는 것이 일반적
*/

// 이진트리
/*
포화이진트리 - 리프 노드를 제외한 모든 노드가 자식을 다 가지고 있음

완전 이진트리 - 모든 노드가 왼쪽 자식부터 차근차근 채워진 트리

높이 균형 트리 - 높이가 1이상 차이나지 않는 트리
*/ 

// 힙
/*
- 원소들 중에서 최댓 값 혹은 최소값을 빠르게 찾아내는 자료구조
- 최대 힙 - 부모 노드가 자식 노드보다 값이 큰 완전 이진트리를 말함
- 최소 힙 - 
- 시간 복잡도 O(logN)
- heapify
- 힙의 삽입과 삭제 연산을 고려해 보자
- 외부 라이브러리 사용하기
*/